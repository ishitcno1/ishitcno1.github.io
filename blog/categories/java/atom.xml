<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Java | 晓耕翻露草]]></title>
  <link href="http://ishitcno1.github.io/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://ishitcno1.github.io/"/>
  <updated>2015-01-27T08:45:12+08:00</updated>
  <id>http://ishitcno1.github.io/</id>
  <author>
    <name><![CDATA[ishitcno1]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java笔记——字符]]></title>
    <link href="http://ishitcno1.github.io/blog/2014/01/02/java-note-char/"/>
    <updated>2014-01-02T10:00:00+08:00</updated>
    <id>http://ishitcno1.github.io/blog/2014/01/02/java-note-char</id>
    <content type="html"><![CDATA[<h2>1.基本概念</h2>

<p>Code Point： 一个Code Point表示一个Unicode字符，例如U+0041表示A，U+2122表示™，U+03C0表示π，U+1D56B表示𝕫。对于基本字符（basic multilingual），Code Point取值从U+0000到U+FFFF。对于扩展字符（supplementary characters），Code Point取值从U+10000到U+10FFFF。</p>

<!-- more -->


<p>Code Unit：Code Unit是Java对Code Point的表示单元，固定为16-bit。对于基本字符，一个Code Unit对应一个Code Point。而对于扩展字符，需要用两个Code Unit表示一个Code Point，这些unit是用基本字符中的备用point编码来表示。第一个unit取值从U+D800到U+DBFF，第二个unit取值从U+DC00到U+DFFF。</p>

<h2>2.输出unicode字符</h2>

<p>对于基本字符，可以直接编码在字符串中</p>

<pre><code class="java">System.out.println("U+0041 is \u0041");
System.out.println("U+2122 is \u2122");
System.out.println("U+03C0 is \u03C0");
</code></pre>

<p>结果：</p>

<pre><code>U+0041 is A
U+2122 is ™
U+03C0 is π
</code></pre>

<p>对于扩展字符，需要使用Character类中的 <code>static char[] toChars(int codePoint)</code></p>

<pre><code class="java">char[] c = Character.toChars(0x1D56B);
System.out.println(c);
System.out.println("U+1D56B is " + new String(c));
</code></pre>

<p>结果：</p>

<pre><code>𝕫
U+1D56B is 𝕫
</code></pre>

<h2>参考</h2>

<ul>
<li><em>Core Java Volume I-Fundamentals 9th Edition</em></li>
</ul>

]]></content>
  </entry>
  
</feed>
