<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Markdown | 晓耕翻露草]]></title>
  <link href="http://ishitcno1.github.io/blog/categories/markdown/atom.xml" rel="self"/>
  <link href="http://ishitcno1.github.io/"/>
  <updated>2015-01-27T08:45:12+08:00</updated>
  <id>http://ishitcno1.github.io/</id>
  <author>
    <name><![CDATA[ishitcno1]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Markdown撰写简历]]></title>
    <link href="http://ishitcno1.github.io/blog/2013/12/31/write-resume-with-markdown/"/>
    <updated>2013-12-31T17:21:03+08:00</updated>
    <id>http://ishitcno1.github.io/blog/2013/12/31/write-resume-with-markdown</id>
    <content type="html"><![CDATA[<p>这里用到的工具是markdown-resume，<a href="https://github.com/there4/markdown-resume">Github地址</a><br/>
我fork了下，写了个中文版的sample.md，见<a href="https://github.com/ishitcno1/markdown-resume/tree/zhsample">这里</a></p>

<h2>1.安装php和wkhtmltopdf</h2>

<pre><code>sudo apt-get install php5
sudo apt-get install wkhtmltopdf
</code></pre>

<!-- more -->


<h2>2.获取markdown-resume</h2>

<p>原作者地址</p>

<pre><code>git clone https://github.com/there4/markdown-resume.git
</code></pre>

<p>我修改后的地址</p>

<pre><code>git clone https://github.com/ishitcno1/markdown-resume.git
</code></pre>

<h2>3.生成简历</h2>

<p>resume目录下的sample.md展示了语法，按其修改使用即可。如果你clone的我的版本，checkout zhsample分支后，resume中还会存在一个zhsample.md。这是一个中文版的示例。</p>

<p>生成html版简历</p>

<pre><code>php ./bin/resume.php --source resume/sample.md
</code></pre>

<p>生成pdf版和html版简历</p>

<pre><code>php ./bin/resume.php --source resume/sample.md --pdf
</code></pre>

<h2>4.使用模板</h2>

<p>默认使用的模板是modern，项目还包含了blockish和unstyled，当然完全可以自定义。</p>

<pre><code>php ./bin/resume.php --source resume/sample.md -t blockish
</code></pre>

<p>默认部分字体偏小，可以修改模板下的CSS文件，如修改resume.css</p>

<pre><code class="css">dl {
    dd {
        margin: 0 0 1.5em;
        padding: 0;
        font-size: 100%;
        line-height: 1.4em;
    }
}

#footer + p {
    width: 100%;
    font-size: 16px;
    text-align: center;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用jekyll在github上写blog]]></title>
    <link href="http://ishitcno1.github.io/blog/2013/12/25/use-jekyll-with-github/"/>
    <updated>2013-12-25T22:37:23+08:00</updated>
    <id>http://ishitcno1.github.io/blog/2013/12/25/use-jekyll-with-github</id>
    <content type="html"><![CDATA[<h2>1.安装jekyll</h2>

<pre><code>gem install jekyll
</code></pre>

<h2>2.创建帐号</h2>

<p>在github上新建repo，形式为username.github.io，其中username与你的用户名相同。具体可以看<a href="http://pages.github.com/">Github Pages</a></p>

<!-- more -->


<p>将repo clone到本地，并用jekyll初始化项目</p>

<pre><code>git clone git.url
cd username.github.io
jekyll new myblog
mv myblog/* ./
mv myblog/.gitignore ./
rmdir myblog/
</code></pre>

<h2>3.开发与测试</h2>

<p>运行开发服务器，加入 <code>--watch</code> 后，jekyll会监视文件的改动并即时生成页面，方便开发。</p>

<pre><code>jekyll server --watch
</code></pre>

<p>用浏览器访问 <code>localhost:4000</code> 就能看到生成的页面。<br/>
具体的开发参看<a href="http://jekyllrb.com/docs/home/">jekyll官网</a>和其他人搭建的blog。</p>

<h2>4.推送到github</h2>

<pre><code>git push -u origin master
</code></pre>

<p>等10分钟左右，用浏览器打开username.github.io就可以看到生成的页面了。</p>

<h2>5.后记</h2>

<p>这只是一篇简单的流程，具体使用jekyll还是看官方文档。</p>
]]></content>
  </entry>
  
</feed>
